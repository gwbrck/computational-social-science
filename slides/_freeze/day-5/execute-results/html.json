{
  "hash": "8f7bd1c4d3060096fec14d33bfddec3d",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Simulation &<br>Agent-based Models\"\nsubtitle: \"[DAY FIVE]{.kn-pink} [GESIS Fall Seminar in Computational Social Science]{.kn-blue}\"\nauthor:\n  - name: John McLevey\n    affiliations:\n      - name: University of Waterloo\n  - name: Johannes B. Gruber\n    affiliations:\n      - name: VU Amsterdam\noutput-dir: \"../docs/\"\nformat:\n  revealjs:\n    theme: [default, custom.scss]\n    width: 1600\n    height: 900\n    embed-resources: true\n    execute:\n      echo: true\n      warning: false\n      cache: true\n      freeze: true\n    slide-number: false\n    chalkboard: false\n    preview-links: auto\n    smaller: true\n    fig-align: left\n    fig-format: svg\n    lightbox: true\n    scrollable: true\n    code-overflow: scroll\n    code-fold: false\n    code-line-numbers: true\n    code-copy: hover\n    reference-location: document\n    tbl-cap-location: margin\n    logo: media/logo_gesis.png\n    footer: \"[CC BY-SA 4.0]{.nord-footer}\"\n    email-obfuscation: javascript\nhighlight-style: \"nord\"\nbibliography: references.bib\n---\n\n\n<!-- {{< include _day-5-introduction.qmd >}} -->\n<!-- {{< include _day-5-synthetic-networks.qmd >}} -->\n\n## Agent-based Modelling in Python\n\n`NDLib`\n\n<br>\n\n:::: {.columns}\n::: {.column width=\"40%\"}\n![Don't forget about your conda environment!](media/chatgpt_dependency_hell.png){width=100%}\n:::\n\n::: {.column width=\"5%\"}\n:::\n\n::: {.column width=\"55%\"}\nWith the `gt` conda environment still activated, import the packages.\n\n::: {#a6b49c30 .cell execution_count=2}\n``` {.python .cell-code}\nimport networkx as nx\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nimport ndlib.models.ModelConfig as mc \nimport ndlib.models.epidemics as ep \nfrom ndlib.utils import multi_runs\n\nfrom icsspy import set_style\nfrom icsspy.simulations import simulation_df\n\nset_style()\n```\n:::\n\n\n:::\n::::\n\n\n##\n\n::: {#a1fb9f61 .cell execution_count=3}\n``` {.python .cell-code}\npopulation_size = 300 \nG = nx.watts_strogatz_graph(population_size, 4, 0.15) \nG.name = \"A Simulated Small World\" \n\nlayout = nx.nx_pydot.graphviz_layout(G) \n\nfig, ax = plt.subplots(figsize=(12, 12)) \nnx.draw(G, pos=layout, node_color='gray', edge_color='gray', node_size=100, width=.5) \nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](day-5_files/figure-revealjs/cell-3-output-1.svg){}\n:::\n:::\n\n\n##\n\nWe'll define a function ☂︎\n\n::: {#93a07a2d .cell execution_count=4}\n``` {.python .cell-code}\ndef sir_model(network, beta, gamma, fraction_infected): \n  config = mc.Configuration() \n  config.add_model_parameter('beta', beta) \n  config.add_model_parameter('gamma', gamma) \n  config.add_model_parameter(\"fraction_infected\", fraction_infected) \n  \n  model = ep.SIRModel(network) \n  model.set_initial_status(config) \n  return model\n```\n:::\n\n\n## \n\nAnd run our first SIR model!\n\n::: {#86d8f641 .cell execution_count=5}\n``` {.python .cell-code}\nsir_model_1 = sir_model(G, beta=0.05, gamma=0.01, fraction_infected=0.1) \nsir_1_iterations = sir_model_1.iteration_bunch(200, node_status=True)\nsir_1_trends, sir_1_deltas = simulation_df(sir_1_iterations, G)\nsir_1_trends.head(10)\n```\n\n::: {.cell-output .cell-output-display execution_count=26}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Susceptible</th>\n      <th>Infected</th>\n      <th>Removed</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0.900000</td>\n      <td>0.100000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0.883333</td>\n      <td>0.113333</td>\n      <td>0.003333</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0.873333</td>\n      <td>0.123333</td>\n      <td>0.003333</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0.856667</td>\n      <td>0.136667</td>\n      <td>0.006667</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0.836667</td>\n      <td>0.156667</td>\n      <td>0.006667</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>0.803333</td>\n      <td>0.186667</td>\n      <td>0.010000</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>0.770000</td>\n      <td>0.216667</td>\n      <td>0.013333</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>0.760000</td>\n      <td>0.223333</td>\n      <td>0.016667</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>0.720000</td>\n      <td>0.263333</td>\n      <td>0.016667</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>0.703333</td>\n      <td>0.276667</td>\n      <td>0.020000</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n##\n\n::: {#5e2caede .cell execution_count=6}\n``` {.python .cell-code}\nfig, ax = plt.subplots()\nsns.lineplot(data=sir_1_trends)\nax.set(xlabel='Iteration / step in time', ylabel='Proportion of nodes')\nsns.despine()\nplt.legend()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](day-5_files/figure-revealjs/cell-6-output-1.svg){}\n:::\n:::\n\n\n##\n\n::: {#2a97c23d .cell execution_count=7}\n``` {.python .cell-code}\nfig, (ax1, ax2, ax3) = plt.subplots(3,1, figsize=(8,8), sharex=True)\nsns.lineplot(ax = ax1, data=sir_1_deltas['Susceptible'], color='gray')\nsns.lineplot(ax = ax2, data=sir_1_deltas['Infected'], color='gray')\nsns.lineplot(ax = ax3, data=sir_1_deltas['Removed'], color='gray')\n## EMPHASIZE DEVIATIONS FROM 0\nax1.axhline(0, color='crimson')\nax2.axhline(0, color='crimson')\nax3.axhline(0, color='crimson')\nax3.set(xlabel='Iteration')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](day-5_files/figure-revealjs/cell-7-output-1.svg){}\n:::\n:::\n\n\n##\n\n![The same simulated small-world network as before, displayed 20 times –\nonce for each of the first 20 time steps in the simulation of epidemic spread through the\nnetwork](media/small_world_epidemic.png){width=100% #fig-small_world_epidemic}\n\n## Let's do that 500 more times\n\n\n\n\n# References\n\n## \n\n",
    "supporting": [
      "day-5_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}

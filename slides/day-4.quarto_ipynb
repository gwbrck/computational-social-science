{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"Generative<br>Network Analysis\"\n",
        "subtitle: \"[DAY FOUR]{.kn-pink} [GESIS Fall Seminar in Computational Social Science]{.kn-blue}\"\n",
        "author:\n",
        "  - name: John McLevey\n",
        "    affiliations:\n",
        "      - name: University of Waterloo\n",
        "  - name: Johannes B. Gruber\n",
        "    affiliations:\n",
        "      - name: VU Amsterdam\n",
        "output-dir: \"../docs/\"\n",
        "format:\n",
        "  revealjs:\n",
        "    theme: [default, custom.scss]\n",
        "    width: 1600\n",
        "    height: 900\n",
        "    embed-resources: true\n",
        "    execute:\n",
        "      echo: true\n",
        "      warning: false\n",
        "      cache: true\n",
        "      freeze: true\n",
        "    slide-number: false\n",
        "    chalkboard: false\n",
        "    preview-links: auto\n",
        "    smaller: true\n",
        "    fig-align: left\n",
        "    fig-format: svg\n",
        "    lightbox: true\n",
        "    scrollable: true\n",
        "    code-overflow: scroll\n",
        "    code-fold: false\n",
        "    code-line-numbers: true\n",
        "    code-copy: hover\n",
        "    reference-location: document\n",
        "    tbl-cap-location: margin\n",
        "    logo: media/logo_gesis.png\n",
        "    footer: \"[CC BY-SA 4.0]{.nord-footer}\"\n",
        "    email-obfuscation: javascript\n",
        "highlight-style: \"nord\"\n",
        "bibliography: references.bib\n",
        "---\n",
        "\n",
        "\n",
        "\n",
        "<!-- {{< include _day-4-origins.qmd >}} -->\n",
        "<!-- {{< include _day-4-sna-topics.qmd >}} -->\n",
        "<!-- {{< include _day-4-learning-objectives.qmd >}} -->\n",
        "<!-- {{< include _day-4-community-detection.qmd >}} -->\n",
        "<!-- {{< include _day-4-modularity-maximization-is-bad.qmd >}} -->\n",
        "<!-- {{< include _day-4-force-directed-visualization.qmd >}} -->\n",
        "<!-- {{< include _day-4-generative-modelling-networks.qmd >}} -->\n",
        "<!-- Tutorials -->\n",
        "<!-- {{< include _day-4-tutorial-plan.qmd >}} -->\n",
        "<!-- {{< include _day-4-tutorial-political-blogs.qmd >}} -->\n",
        "\n",
        "## Iterative Modelling\n",
        "\n",
        ":::: {.columns}\n",
        "::: {.column width=\"65%\"}\n",
        "The Enron Email Network\n",
        "\n",
        "<br><br>\n",
        "\n",
        "We'll use `graph-tool` to\n",
        "\n",
        "- iteratively fit, improve, and compare Nested Stochastic Blockmodels by analyzing a directed email communication network between Enron employees\n",
        "- conduct rigerous posterior inference about the network from a generative modelling perspective\n",
        "\n",
        "[This will be a bit of a modelling marathon, so if all of this is new to you,<br>*focus on high-level logic*.]{.nord-light}\n",
        ":::\n",
        "\n",
        "::: {.column width=\"35%\"}\n",
        ":::\n",
        "::::\n",
        "\n",
        "::: {.notes}\n",
        "In this tutorial, you'll learn how to use `graph-tool` to iteratively fit, improve, and compare Nested Stochastic Blockmodels (NSBMs) by analyzing a directed email communication network between Enron employees. You also learn how to conduct rigerous posterior inference about the network from a generative modelling perspective.\n",
        "\n",
        "The models we'll develop here start simple and gradually increase in complexity, incorporating additional information about the Enron network, or applying refinements to better estimate it's structure. We will visualize, assess, and compare these models, and finally, analyze the posterior distribution of block partitions to quantify uncertainty, compute marginal probabilities for node block assignments, and determine if there are other plausible explanations for the structure of our observed network.\n",
        ":::\n",
        "\n",
        "## Setup\n",
        "\n",
        "With the `gt` Conda environment activated,\n",
        "\n",
        "```python\n",
        "import math\n",
        "import pickle\n",
        "import random\n",
        "from pprint import pprint\n",
        "\n",
        "import graph_tool.all as gt\n",
        "import matplotlib as mpl\n",
        "import matplotlib.pyplot as plt\n",
        "import matplotlib.ticker as ticker\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "import seaborn as sns\n",
        "from sklearn.metrics import homogeneity_score\n",
        "\n",
        "import icsspy\n",
        "from icsspy.networks import (\n",
        "    get_consensus_partition_from_posterior,\n",
        "    plot_line_comparison,\n",
        ")\n",
        "from icsspy.paths import enron\n",
        "\n",
        "\n",
        "icsspy.set_style()\n",
        "print(f'Using graph-tool version {gt.__version__}')\n",
        "```\n",
        "\n",
        "> Using graph-tool version 2.77 (commit , )\n",
        "\n",
        "##\n",
        "\n",
        "## Load the Enron Data\n",
        "\n",
        "We can load the Enron email data (Crick 2022)^[Tyler Crick. 2022. \"The Enron email dataset, cleaned and validated.\" *Computational Social Science Lab Data*.] from the `icsspy` course package. The network itself has already been prepared and can be loaded directly into `graph-tool`."
      ],
      "id": "b496b6d3"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "enron_email_network = str(enron / 'enron_graph.gt')\n",
        "g = gt.load_graph(enron_email_network)\n",
        "print(g)"
      ],
      "id": "e5ff3319",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "Like the political blogs network, this network has internal property maps containing data about node and edge attributes, as well as the graph itself. We can list the available property maps:"
      ],
      "id": "cdf28a77"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "g.list_properties()"
      ],
      "id": "13d21014",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "- `vertex_lookup` is an internal dictionary that maps each email address to a unique integer ID.\n",
        "- `label` is a string variable containing the email address.\n",
        "- `position` is a string variable containing information about the job position associated with the email account.\n",
        "- `edge weight` are counts of the number of emails that vertex `i` sent vertex `j` (since this is a directed network)\n",
        "\n",
        "\n",
        "\n",
        "<!-- {{< include _day-4-tutorial-youtube.qmd >}} -->\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "# References\n",
        "\n",
        "##"
      ],
      "id": "b953c335"
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "/Users/johnmclevey/miniconda3/envs/gt/share/jupyter/kernels/python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}

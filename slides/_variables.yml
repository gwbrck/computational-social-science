# This file was generated by `poetry run collect-configs`, do not edit

# /lab/john/repos/computational-social-science-python-intro/pipelines/youtube/config.yaml
channels: '"EuroPythonConference, PyDataTV, datasocietyresearchinstitu1085, MicrosoftResearch, talksatgoogle"'
list_youtube_api_key_names: '"GESIS, GESISPY, INTRO_CSS, INTROCSS2024, YouTubeAPILecture, metascience_golems, McLevey, MSGD"'

# /lab/john/repos/computational-social-science-python-intro/pipelines/youtube/label_comment_topics/src/label_comment_topics.yaml
bertopic_hdbscan_min_cluster_size: 30
bertopic_hdbscan_min_samples: 5
bertopic_mmr_model_diversity: 0.3
bertopic_umap_n_components: 5
bertopic_umap_n_neighbors: 15
representation_ngram_upper_limit: 2
representation_top_n_words: 10
representation_vectorizer_max_df: 0.85
representation_vectorizer_min_df: 0.1

# /lab/john/repos/computational-social-science-python-intro/pipelines/youtube/model_networks/src/model_networks.yaml
one_mode_channel_networks_channels_EuroPython_entity_entity_[topics]: '"channels_EuroPython-Conference_entity_entity_[topics]"'
one_mode_channel_networks_channels_EuroPython_entity_entity_[videos]: '"channels_EuroPython-Conference_entity_entity_[videos]"'
one_mode_channel_networks_channels_HuggingFace_entity_entity_[topics]: '"channels_HuggingFace_entity_entity_[topics]"'
one_mode_channel_networks_channels_HuggingFace_entity_entity_[videos]: '"channels_HuggingFace_entity_entity_[videos]"'
one_mode_channel_networks_channels_PyData_entity_entity_[topics]: '"channels_PyData_entity_entity_[topics]"'
one_mode_channel_networks_channels_PyData_entity_entity_[videos]: '"channels_PyData_entity_entity_[videos]"'
one_mode_channel_networks_channels_PyMC_entity_entity_[topics]: '"channels_PyMC-Developers_entity_entity_[topics]"'
one_mode_channel_networks_channels_PyMC_entity_entity_[videos]: '"channels_PyMC-Developers_entity_entity_[videos]"'
one_mode_channel_networks_channels_TalksGoogle_entity_entity_[topics]: '"channels_Talks-at-Google_entity_entity_[topics]"'
one_mode_channel_networks_channels_TalksGoogle_entity_entity_[videos]: '"channels_Talks-at-Google_entity_entity_[videos]"'
one_mode_comment_networks: null
two_mode_channel_networks_channels_EuroPython_[bipartite]_entity_topic: '"channels_EuroPython-Conference_[bipartite]_entity_topic_network"'
two_mode_channel_networks_channels_HuggingFace_[bipartite]_entity_topic: '"channels_HuggingFace_[bipartite]_entity_topic_network"'
two_mode_channel_networks_channels_PyData_[bipartite]_entity_topic: '"channels_PyData_[bipartite]_entity_topic_network"'
two_mode_channel_networks_channels_PyMC_[bipartite]_entity_topic: '"channels_PyMC-Developers_[bipartite]_entity_topic_network"'
two_mode_channel_networks_channels_TalksGoogle_[bipartite]_entity_topic: '"channels_Talks-at-Google_[bipartite]_entity_topic_network"'
two_mode_channel_networks_comments_EuroPython_entity_topic: '"comments_EuroPython-Conference_entity_topic_network"'
two_mode_channel_networks_comments_HuggingFace_entity_topic: '"comments_HuggingFace_entity_topic_network"'
two_mode_channel_networks_comments_PyData_entity_topic: '"comments_PyData_entity_topic_network"'
two_mode_channel_networks_comments_PyMC_entity_topic: '"comments_PyMC-Developers_entity_topic_network"'
two_mode_comment_networks: null

# /lab/john/repos/computational-social-science-python-intro/pipelines/youtube/collect_comment_data/src/collect_comment_data.yaml
attempt_to_collect_when_comments_unknown: false
no_redownloading: true

# /lab/john/repos/computational-social-science-python-intro/pipelines/youtube/construct_channel_networks/src/construct_channel_networks.yaml
bipartite_edge_threshold: 1
edge_threshold: 2
topic_representation: '"KeyBERT"'

# /lab/john/repos/computational-social-science-python-intro/pipelines/youtube/merge_labelled_channel_data/src/merge_labelled_channel_data.yaml
entity_score_threshold: 0.7
entity_types: '"product-software"'

# /lab/john/repos/computational-social-science-python-intro/pipelines/youtube/process_channel_data/src/process_channel_data.yaml
remove_substrings_EuroPythonConference_videos_data: '"This work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License"'
video_metadata_keep_keys: '"snippet.channelTitle, id, snippet.title, contentDetails.licensedContent, status.privacyStatus, status.license, status.publicStatsViewable, statistics.viewCount, statistics.likeCount, statistics.favoriteCount, statistics.commentCount"'
